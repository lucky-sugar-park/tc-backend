server.port=8080
server.servlet.session.timeout: 7200
server.shutdown=graceful
server.shutdown.grace-period=7000
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true
endpoints.shutdown.enabled=true
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
# required for application's shutdown (a kind of spring boot bug-deadlock-resolved at 3.x)
# spring.main.register-shutdown-hook=false

logging.level.root=info

#=============================================================================
scheduler.name.default=TestScheduler
#============================================================================
# Configure Main Scheduler Properties  
#============================================================================
org.quartz.scheduler.instanceName=TestScheduler 
org.quartz.scheduler.instanceId=AUTO

#============================================================================
# Configure ThreadPool  
#============================================================================
org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount=10
org.quartz.threadPool.threadPriority=5

#============================================================================
# Configure JobStore  
#============================================================================
org.quartz.jobStore.misfireThreshold=60000
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
#org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.useProperties=true
org.quartz.jobStore.dataSource=quartzDataSource
org.quartz.jobStore.tablePrefix=qrtz_

org.quartz.jobStore.isClustered=true
org.quartz.jobStore.clusterCheckinInterval=20000

#============================================================================
# Tool Control Configuration
#============================================================================
plc.connection.retry.count=10
plc.connection.retry.interval.rate=1500
plc.connection.retry.interval.increment=true

#============================================================================
# Configure Datasources  
#============================================================================
org.quartz.dataSource.quartzDataSource.provider=hikaricp
org.quartz.dataSource.quartzDataSource.driver=org.mariadb.jdbc.Driver
org.quartz.dataSource.quartzDataSource.URL=jdbc:mariadb://localhost:3306/quartz-test
org.quartz.dataSource.quartzDataSource.user=root
org.quartz.dataSource.quartzDataSource.password=1qazxsw2
org.quartz.dataSource.quartzDataSource.maxConnections=5
org.quartz.dataSource.quartzDataSource.validationQuery=select 1

# In case of MySQL below configuration are required to create schema automatically (caution is required)
spring.quartz.jdbc.initialize-schema: always
spring.quartz.jdbc.comment-prefix: #
spring.quartz.job-store-type=jdbc

# For springboot 3.x (removed MariaDB103Dialect)
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
#spring.jpa.database-platform=org.hibernate.dialect.MariaDB103Dialect
spring.jpa.hibernate.ddl-auto=update
# validate, update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/quartz-test
spring.datasource.username=root
spring.datasource.password=1qazxsw2

#============================================================================
# Oauth2 client (keycloak)
#============================================================================

#spring.security.oauth2.client.registration.keycloak.client-id=client-id
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.scope=openid
#spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/SpringBootKeycloak

# apache.tomcat.util.compat.Jre19Compat : Class not found so assuming code is running on a pre-Java 19 JVM
# spring.cloud.service-registry.auto-registration.enabled=false

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#============================================================================
# auth
#============================================================================
jwt.secret=hahahahahahahahahahahahahahahaaaaabdbsdjfskdjflaskdjflaskdfjlaskdfjaskldfjaslkdfjas
jwt.token-access-expiration-milli-seconds=10000000
jwt.token-refresh-expiration-milli-seconds=1000000000

#============================================================================
# Duplication
#============================================================================
# default: single
# oper.duplication.mode=single
# oper.duplication.mode=multiple-active
oper.duplication.mode=active-standby

#============================================================================
# Redis
#============================================================================
spring.redis.host=localhost
spring.redis.password=
spring.redis.port=6379

#============================================================================
# Spring doc
#============================================================================
springdoc.version: @project.version@
springdoc.api-docs.path: /api-docs
springdoc.default-consumes-media-type: application/json
springdoc.default-produces-media-type: application/json
springdoc.swagger-ui.operations-sorter: alpha
springdoc.swagger-ui.tags-sorter: alpha
springdoc.swagger-ui.path: /swagger-ui.html
springdoc.swagger-ui.disable-swagger-default-url: true
springdoc.swagger-ui.disable-query-params-without-oauth2: true
springdoc.swagger-ui.doc-expansion: none
#springdoc.path-to-match:
#	- /auth/** 
#    - /api/**
    

#============================================================================
# management by actuator: ACTUATOR PROPERTIES
#============================================================================
#management.server.port=9080
management.endpoints.enabled-by-default=true
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.db.enabled=true
management.health.readinessstate.enabled=true
management.health.livenessstate.enabled=true
management.endpoint.health.group.liveness.include=livenessState
management.endpoint.health.group.readiness.include=readinessState,db
management.endpoint.health.group.liveness.show-details=always
management.endpoint.health.group.readiness.show-details=always
management.endpoints.web.exposure.include=*

#============================================================================
# Spring boot web administrator client
#============================================================================
spring.boot.admin.client.url=http://localhost:8082
spring.boot.admin.client.instance.name=tool control
spring.boot.admin.client.instance.service-base-url=http://localhost:8080